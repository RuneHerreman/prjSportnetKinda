<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>